// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: chinchiro.proto

package chinchiro

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ターンステータスの定義
type TurnStatus int32

const (
	TurnStatus_UNKNOWN      TurnStatus = 0
	TurnStatus_PLAYER1_TURN TurnStatus = 1
	TurnStatus_PLAYER2_TURN TurnStatus = 2
)

// Enum value maps for TurnStatus.
var (
	TurnStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PLAYER1_TURN",
		2: "PLAYER2_TURN",
	}
	TurnStatus_value = map[string]int32{
		"UNKNOWN":      0,
		"PLAYER1_TURN": 1,
		"PLAYER2_TURN": 2,
	}
)

func (x TurnStatus) Enum() *TurnStatus {
	p := new(TurnStatus)
	*p = x
	return p
}

func (x TurnStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TurnStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chinchiro_proto_enumTypes[0].Descriptor()
}

func (TurnStatus) Type() protoreflect.EnumType {
	return &file_chinchiro_proto_enumTypes[0]
}

func (x TurnStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TurnStatus.Descriptor instead.
func (TurnStatus) EnumDescriptor() ([]byte, []int) {
	return file_chinchiro_proto_rawDescGZIP(), []int{0}
}

type ChinchiroMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                        // 送信者のユーザーID
	DiceRolls  []int32              `protobuf:"varint,2,rep,packed,name=dice_rolls,json=diceRolls,proto3" json:"dice_rolls,omitempty"`                       // 出目
	Timestamp  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                // 送信時刻
	TurnStatus TurnStatus           `protobuf:"varint,4,opt,name=turn_status,json=turnStatus,proto3,enum=chinchiro.TurnStatus" json:"turn_status,omitempty"` // 現在のターンステータス
}

func (x *ChinchiroMessage) Reset() {
	*x = ChinchiroMessage{}
	mi := &file_chinchiro_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChinchiroMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChinchiroMessage) ProtoMessage() {}

func (x *ChinchiroMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chinchiro_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChinchiroMessage.ProtoReflect.Descriptor instead.
func (*ChinchiroMessage) Descriptor() ([]byte, []int) {
	return file_chinchiro_proto_rawDescGZIP(), []int{0}
}

func (x *ChinchiroMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChinchiroMessage) GetDiceRolls() []int32 {
	if x != nil {
		return x.DiceRolls
	}
	return nil
}

func (x *ChinchiroMessage) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ChinchiroMessage) GetTurnStatus() TurnStatus {
	if x != nil {
		return x.TurnStatus
	}
	return TurnStatus_UNKNOWN
}

var File_chinchiro_proto protoreflect.FileDescriptor

var file_chinchiro_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x68, 0x69, 0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x68, 0x69, 0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x01,
	0x0a, 0x10, 0x43, 0x68, 0x69, 0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x09, 0x64, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x69, 0x6e,
	0x63, 0x68, 0x69, 0x72, 0x6f, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0a, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x3d, 0x0a, 0x0a,
	0x54, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x31, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x32, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x02, 0x32, 0x61, 0x0a, 0x10, 0x43,
	0x68, 0x69, 0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4d, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x69, 0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f,
	0x12, 0x1b, 0x2e, 0x63, 0x68, 0x69, 0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f, 0x2e, 0x43, 0x68, 0x69,
	0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1b, 0x2e,
	0x63, 0x68, 0x69, 0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f, 0x2e, 0x43, 0x68, 0x69, 0x6e, 0x63, 0x68,
	0x69, 0x72, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x40,
	0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x73, 0x75,
	0x6e, 0x61, 0x6b, 0x69, 0x74, 0x39, 0x39, 0x2f, 0x61, 0x6e, 0x6b, 0x79, 0x6c, 0x6f, 0x2d, 0x63,
	0x75, 0x70, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x69, 0x6e, 0x63, 0x68, 0x69, 0x72, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chinchiro_proto_rawDescOnce sync.Once
	file_chinchiro_proto_rawDescData = file_chinchiro_proto_rawDesc
)

func file_chinchiro_proto_rawDescGZIP() []byte {
	file_chinchiro_proto_rawDescOnce.Do(func() {
		file_chinchiro_proto_rawDescData = protoimpl.X.CompressGZIP(file_chinchiro_proto_rawDescData)
	})
	return file_chinchiro_proto_rawDescData
}

var file_chinchiro_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chinchiro_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chinchiro_proto_goTypes = []any{
	(TurnStatus)(0),             // 0: chinchiro.TurnStatus
	(*ChinchiroMessage)(nil),    // 1: chinchiro.ChinchiroMessage
	(*timestamp.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_chinchiro_proto_depIdxs = []int32{
	2, // 0: chinchiro.ChinchiroMessage.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: chinchiro.ChinchiroMessage.turn_status:type_name -> chinchiro.TurnStatus
	1, // 2: chinchiro.ChinchiroService.PlayChinchiro:input_type -> chinchiro.ChinchiroMessage
	1, // 3: chinchiro.ChinchiroService.PlayChinchiro:output_type -> chinchiro.ChinchiroMessage
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chinchiro_proto_init() }
func file_chinchiro_proto_init() {
	if File_chinchiro_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chinchiro_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chinchiro_proto_goTypes,
		DependencyIndexes: file_chinchiro_proto_depIdxs,
		EnumInfos:         file_chinchiro_proto_enumTypes,
		MessageInfos:      file_chinchiro_proto_msgTypes,
	}.Build()
	File_chinchiro_proto = out.File
	file_chinchiro_proto_rawDesc = nil
	file_chinchiro_proto_goTypes = nil
	file_chinchiro_proto_depIdxs = nil
}
